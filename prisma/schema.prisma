generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = "-1"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comic {
  id              String    @id
  name            String    @default("")
  url             String    @unique
  genre           Json      @default("{}")
  content         String?
  translatorTeam  Json      @default("{}")
  anotherName     String[]
  source          Json      @default("{}")
  author          Json      @default("{}")
  postedBy        Json      @default("{}")
  status          String    @default("")
  thumbnail       String?
  createdDate     DateTime  @default(now())
  updatedDate     DateTime  @updatedAt
  pythonFetchInfo Boolean   @default(false)
  chapters        Chapter[]

  @@index([url])
}

model Chapter {
  id          String   @id
  name        String
  url         String   @unique
  comicId     String
  images      String[]
  createdDate String
  updatedDate DateTime @default(now())
  nextId      String?
  previousId  String?
  index       Int      @default(0)
  serverImage Json[]   @default([])
  comic       Comic    @relation(fields: [comicId], references: [id])

  @@index([comicId, index])
}

model Proxy {
  id       String  @id
  url      String
  password String?
  username String?
}

model Urls {
  url         String   @unique
  id          String   @id
  fetched     Boolean  @default(false)
  fetching    Boolean  @default(false)
  createdDate DateTime @default(now())
  isError     Boolean  @default(false)
  updatedDate DateTime @default(now())
}
